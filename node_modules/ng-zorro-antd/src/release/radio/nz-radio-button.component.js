var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Component, ViewEncapsulation, Input, HostBinding, } from '@angular/core';
import { NzRadioComponent } from './nz-radio.component';
var NzRadioButtonComponent = (function (_super) {
    __extends(NzRadioButtonComponent, _super);
    function NzRadioButtonComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._prefixCls = 'ant-radio-button';
        _this._innerPrefixCls = _this._prefixCls + "-inner";
        _this._inputPrefixCls = _this._prefixCls + "-input";
        return _this;
    }
    Object.defineProperty(NzRadioButtonComponent.prototype, "nzDisabled", {
        get: function () {
            return this._disabled;
        },
        set: function (value) {
            this._disabled = value;
            this.setClassMap();
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(NzRadioButtonComponent.prototype, "nzChecked", {
        get: function () {
            return this._checked;
        },
        set: function (value) {
            this._checked = value;
            this.setClassMap();
        },
        enumerable: true,
        configurable: true
    });
    ;
    return NzRadioButtonComponent;
}(NzRadioComponent));
export { NzRadioButtonComponent };
NzRadioButtonComponent.decorators = [
    { type: Component, args: [{
                selector: '[nz-radio-button]',
                encapsulation: ViewEncapsulation.None,
                template: "\n    <span [ngClass]=\"_classMap\">\n      <span [ngClass]=\"_innerPrefixCls\"></span>\n      <input type=\"radio\" [ngClass]=\"_inputPrefixCls\" [(ngModel)]=\"nzChecked\" (focus)=\"nzFocus()\" (blur)=\"nzBlur()\">\n    </span>\n    <ng-content></ng-content>\n  ",
                styles: [
                    "/* stylelint-disable at-rule-empty-line-before,at-rule-name-space-after,at-rule-no-unknown */\n/* stylelint-disable declaration-bang-space-before */\n/* stylelint-disable declaration-bang-space-before */\n.ant-radio-group {\n  display: inline-block;\n  font-size: 12px;\n}\n.ant-radio-wrapper {\n  font-size: 12px;\n  display: inline-block;\n  position: relative;\n  white-space: nowrap;\n  margin-right: 8px;\n  cursor: pointer;\n}\n.ant-radio {\n  white-space: nowrap;\n  outline: none;\n  display: inline-block;\n  position: relative;\n  line-height: 1;\n  vertical-align: text-bottom;\n  cursor: pointer;\n}\n.ant-radio-wrapper:hover .ant-radio .ant-radio-inner,\n.ant-radio:hover .ant-radio-inner,\n.ant-radio-focused .ant-radio-inner {\n  border-color: #108ee9;\n}\n.ant-radio-checked:after {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  border: 1px solid #108ee9;\n  content: '';\n  animation: antRadioEffect 0.36s ease-in-out;\n  animation-fill-mode: both;\n  visibility: hidden;\n}\n.ant-radio:hover:after,\n.ant-radio-wrapper:hover .ant-radio:after {\n  visibility: visible;\n}\n.ant-radio-inner {\n  position: relative;\n  top: 0;\n  left: 0;\n  display: block;\n  width: 14px;\n  height: 14px;\n  border-width: 1px;\n  border-style: solid;\n  border-radius: 14px;\n  border-color: #d9d9d9;\n  background-color: #fff;\n  transition: all 0.3s;\n}\n.ant-radio-inner:after {\n  position: absolute;\n  width: 6px;\n  height: 6px;\n  left: 3px;\n  top: 3px;\n  border-radius: 4px;\n  display: table;\n  border-top: 0;\n  border-left: 0;\n  content: ' ';\n  background-color: #108ee9;\n  opacity: 0;\n  transform: scale(0);\n  transition: all 0.3s cubic-bezier(0.78, 0.14, 0.15, 0.86);\n}\n.ant-radio-input {\n  position: absolute;\n  left: 0;\n  z-index: 1;\n  cursor: pointer;\n  opacity: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n}\n.ant-radio-checked .ant-radio-inner {\n  border-color: #108ee9;\n}\n.ant-radio-checked .ant-radio-inner:after {\n  transform: scale(1);\n  opacity: 1;\n  transition: all 0.3s cubic-bezier(0.78, 0.14, 0.15, 0.86);\n}\n.ant-radio-disabled .ant-radio-inner {\n  border-color: #d9d9d9 !important;\n  background-color: #f7f7f7;\n}\n.ant-radio-disabled .ant-radio-inner:after {\n  background-color: #ccc;\n}\n.ant-radio-disabled .ant-radio-input {\n  cursor: not-allowed;\n}\n.ant-radio-disabled + span {\n  color: rgba(0, 0, 0, 0.25);\n  cursor: not-allowed;\n}\nspan.ant-radio + * {\n  padding-left: 8px;\n  padding-right: 8px;\n}\n.ant-radio-button-wrapper {\n  margin: 0;\n  height: 28px;\n  line-height: 26px;\n  color: rgba(0, 0, 0, 0.65);\n  display: inline-block;\n  transition: all 0.3s ease;\n  cursor: pointer;\n  border: 1px solid #d9d9d9;\n  border-left: 0;\n  background: #fff;\n  padding: 0 16px;\n  position: relative;\n}\n.ant-radio-button-wrapper a {\n  color: rgba(0, 0, 0, 0.65);\n}\n.ant-radio-button-wrapper > .ant-radio-button {\n  margin-left: 0;\n  display: block;\n  width: 0;\n  height: 0;\n}\n.ant-radio-group-large .ant-radio-button-wrapper {\n  height: 32px;\n  line-height: 30px;\n}\n.ant-radio-group-small .ant-radio-button-wrapper {\n  height: 22px;\n  line-height: 20px;\n  padding: 0 12px;\n}\n.ant-radio-group-small .ant-radio-button-wrapper:first-child {\n  border-radius: 2px 0 0 2px;\n}\n.ant-radio-group-small .ant-radio-button-wrapper:last-child {\n  border-radius: 0 2px 2px 0;\n}\n.ant-radio-button-wrapper:not(:first-child)::before {\n  content: \"\";\n  display: block;\n  top: 0;\n  left: -1px;\n  width: 1px;\n  height: 100%;\n  position: absolute;\n  background-color: #d9d9d9;\n}\n.ant-radio-button-wrapper:first-child {\n  border-radius: 4px 0 0 4px;\n  border-left: 1px solid #d9d9d9;\n}\n.ant-radio-button-wrapper:last-child {\n  border-radius: 0 4px 4px 0;\n}\n.ant-radio-button-wrapper:first-child:last-child {\n  border-radius: 4px;\n}\n.ant-radio-button-wrapper:hover,\n.ant-radio-button-wrapper-focused {\n  color: #108ee9;\n  position: relative;\n}\n.ant-radio-button-wrapper .ant-radio-inner,\n.ant-radio-button-wrapper input[type=\"checkbox\"],\n.ant-radio-button-wrapper input[type=\"radio\"] {\n  opacity: 0;\n  filter: alpha(opacity=0);\n  width: 0;\n  height: 0;\n}\n.ant-radio-button-wrapper-checked {\n  background: #fff;\n  border-color: #108ee9;\n  color: #108ee9;\n  box-shadow: -1px 0 0 0 #108ee9;\n  z-index: 1;\n}\n.ant-radio-button-wrapper-checked::before {\n  background-color: #108ee9 !important;\n  opacity: 0.1;\n}\n.ant-radio-button-wrapper-checked:first-child {\n  border-color: #108ee9;\n  box-shadow: none !important;\n}\n.ant-radio-button-wrapper-checked:hover {\n  border-color: #49a9ee;\n  box-shadow: -1px 0 0 0 #49a9ee;\n  color: #49a9ee;\n}\n.ant-radio-button-wrapper-checked:active {\n  border-color: #0e77ca;\n  box-shadow: -1px 0 0 0 #0e77ca;\n  color: #0e77ca;\n}\n.ant-radio-button-wrapper-disabled {\n  border-color: #d9d9d9;\n  background-color: #f7f7f7;\n  cursor: not-allowed;\n  color: rgba(0, 0, 0, 0.25);\n}\n.ant-radio-button-wrapper-disabled:first-child,\n.ant-radio-button-wrapper-disabled:hover {\n  border-color: #d9d9d9;\n  background-color: #f7f7f7;\n  color: rgba(0, 0, 0, 0.25);\n}\n.ant-radio-button-wrapper-disabled:first-child {\n  border-left-color: #d9d9d9;\n}\n.ant-radio-button-wrapper-disabled.ant-radio-button-wrapper-checked {\n  color: #fff;\n  background-color: #e6e6e6;\n  border-color: #d9d9d9;\n  box-shadow: none;\n}\n@keyframes antRadioEffect {\n  0% {\n    transform: scale(1);\n    opacity: 0.5;\n  }\n  100% {\n    transform: scale(1.6);\n    opacity: 0;\n  }\n}\n"
                ]
            },] },
];
/** @nocollapse */
NzRadioButtonComponent.ctorParameters = function () { return []; };
NzRadioButtonComponent.propDecorators = {
    'nzDisabled': [{ type: Input }, { type: HostBinding, args: ['class.ant-radio-button-wrapper-disabled',] },],
    'nzChecked': [{ type: Input }, { type: HostBinding, args: ['class.ant-radio-button-wrapper-checked',] },],
};
