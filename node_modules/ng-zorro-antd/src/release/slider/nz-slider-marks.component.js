var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
import { Component, Input, ViewEncapsulation } from '@angular/core';
var NzSliderMarksComponent = (function () {
    function NzSliderMarksComponent() {
        // Dynamic properties
        this.nzLowerBound = null;
        this.nzUpperBound = null;
    }
    NzSliderMarksComponent.prototype.ngOnChanges = function (changes) {
        if (changes.nzLowerBound || changes.nzUpperBound) {
            this.togglePointActive();
        }
    };
    NzSliderMarksComponent.prototype.ngOnInit = function () {
        var _a = this, nzVertical = _a.nzVertical, nzClassName = _a.nzClassName, nzMarksArray = _a.nzMarksArray, nzMin = _a.nzMin, nzMax = _a.nzMax, nzLowerBound = _a.nzLowerBound, nzUpperBound = _a.nzUpperBound;
        var range = nzMax - nzMin;
        this.attrs = nzMarksArray.map(function (mark) {
            var value = mark.value, offset = mark.offset, config = mark.config;
            // calc styles
            var label = config, style;
            if (nzVertical) {
                style = {
                    marginBottom: '-50%',
                    bottom: (value - nzMin) / range * 100 + "%"
                };
            }
            else {
                var marksCount = nzMarksArray.length, unit = 100 / (marksCount - 1), markWidth = unit * 0.9;
                style = {
                    width: markWidth + "%",
                    marginLeft: -markWidth / 2 + "%",
                    left: (value - nzMin) / range * 100 + "%"
                };
            }
            // custom configuration
            if (typeof config === 'object') {
                label = config.label;
                if (config.style) {
                    style = __assign({}, style, config.style);
                }
            }
            return {
                id: value,
                value: value,
                offset: offset,
                classes: (_a = {},
                    _a[nzClassName + "-text"] = true,
                    _a),
                style: style,
                label: label
            };
            var _a;
        }); // END - map
        this.togglePointActive();
    };
    NzSliderMarksComponent.prototype.trackById = function (index, attr) {
        return attr.id;
    };
    NzSliderMarksComponent.prototype.togglePointActive = function () {
        var _a = this, nzClassName = _a.nzClassName, attrs = _a.attrs, nzLowerBound = _a.nzLowerBound, nzUpperBound = _a.nzUpperBound, nzIncluded = _a.nzIncluded;
        if (attrs && nzLowerBound !== null && nzUpperBound !== null) {
            attrs.forEach(function (attr) {
                var value = attr.value, isActive = (!nzIncluded && value === nzUpperBound) ||
                    (nzIncluded && value <= nzUpperBound && value >= nzLowerBound);
                attr.classes[nzClassName + "-text-active"] = isActive;
            });
        }
    };
    return NzSliderMarksComponent;
}());
export { NzSliderMarksComponent };
NzSliderMarksComponent.decorators = [
    { type: Component, args: [{
                selector: 'nz-slider-marks',
                encapsulation: ViewEncapsulation.None,
                template: "\n    <div [class]=\"nzClassName\">\n      <span *ngFor=\"let attr of attrs; trackBy: trackById\" [ngClass]=\"attr.classes\" [ngStyle]=\"attr.style\" [innerHTML]=\"attr.label\"></span>\n    </div>\n  "
            },] },
];
/** @nocollapse */
NzSliderMarksComponent.ctorParameters = function () { return []; };
NzSliderMarksComponent.propDecorators = {
    'nzLowerBound': [{ type: Input },],
    'nzUpperBound': [{ type: Input },],
    'nzClassName': [{ type: Input },],
    'nzVertical': [{ type: Input },],
    'nzMarksArray': [{ type: Input },],
    'nzMin': [{ type: Input },],
    'nzMax': [{ type: Input },],
    'nzIncluded': [{ type: Input },],
};
var Marks = (function () {
    function Marks() {
    }
    return Marks;
}());
export { Marks };
var MarksArray = (function (_super) {
    __extends(MarksArray, _super);
    function MarksArray() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MarksArray;
}(Array));
export { MarksArray };
