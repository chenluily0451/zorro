import { Component, ViewEncapsulation, Input, HostListener, forwardRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
var NzSwitchComponent = (function () {
    function NzSwitchComponent() {
        this._prefixCls = 'ant-switch';
        this._innerPrefixCls = this._prefixCls + "-inner";
        this._checked = false;
        this._disabled = false;
        // ngModel Access
        this.onChange = Function.prototype;
        this.onTouched = Function.prototype;
    }
    Object.defineProperty(NzSwitchComponent.prototype, "nzSize", {
        get: function () {
            return this._size;
        },
        set: function (value) {
            this._size = value;
            this.setClassMap();
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(NzSwitchComponent.prototype, "nzDisabled", {
        get: function () {
            return this._disabled;
        },
        set: function (value) {
            this._disabled = value;
            this.setClassMap();
        },
        enumerable: true,
        configurable: true
    });
    ;
    NzSwitchComponent.prototype.onClick = function (e) {
        e.preventDefault();
        if (!this._disabled) {
            this.updateValue(!this._checked);
            this.onChange(this._checked);
        }
    };
    NzSwitchComponent.prototype.updateValue = function (value) {
        if (this._checked === value) {
            return;
        }
        this._checked = value;
        this.setClassMap();
    };
    NzSwitchComponent.prototype.setClassMap = function () {
        this._classMap = (_a = {},
            _a[this._prefixCls] = true,
            _a[this._prefixCls + "-checked"] = this._checked,
            _a[this._prefixCls + "-disabled"] = this._disabled,
            _a[this._prefixCls + "-small"] = this._size === 'small',
            _a);
        var _a;
    };
    NzSwitchComponent.prototype.writeValue = function (value) {
        this.updateValue(value);
    };
    NzSwitchComponent.prototype.registerOnChange = function (fn) {
        this.onChange = fn;
    };
    NzSwitchComponent.prototype.registerOnTouched = function (fn) {
        this.onTouched = fn;
    };
    NzSwitchComponent.prototype.ngOnInit = function () {
        this.setClassMap();
    };
    return NzSwitchComponent;
}());
export { NzSwitchComponent };
NzSwitchComponent.decorators = [
    { type: Component, args: [{
                selector: 'nz-switch',
                encapsulation: ViewEncapsulation.None,
                template: "\n    <span [ngClass]=\"_classMap\" tabindex=\"0\">\n      <span [ngClass]=\"_innerPrefixCls\">\n        <ng-template [ngIf]=\"_checked\">\n          <ng-content select=\"[checked]\"></ng-content>\n        </ng-template>\n        <ng-template [ngIf]=\"!_checked\">\n          <ng-content select=\"[unchecked]\"></ng-content>\n        </ng-template>\n      </span>\n    </span>\n  ",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(function () { return NzSwitchComponent; }),
                        multi: true
                    }
                ],
                styles: [
                    "/* stylelint-disable at-rule-empty-line-before,at-rule-name-space-after,at-rule-no-unknown */\n/* stylelint-disable declaration-bang-space-before */\n/* stylelint-disable declaration-bang-space-before */\n.ant-switch {\n  position: relative;\n  display: inline-block;\n  box-sizing: border-box;\n  height: 22px;\n  min-width: 44px;\n  line-height: 20px;\n  vertical-align: middle;\n  border-radius: 20px;\n  border: 1px solid transparent;\n  background-color: rgba(0, 0, 0, 0.25);\n  cursor: pointer;\n  transition: all 0.36s;\n  user-select: none;\n}\n.ant-switch-inner {\n  color: #fff;\n  font-size: 12px;\n  margin-left: 24px;\n  margin-right: 6px;\n  display: block;\n}\n.ant-switch:after {\n  position: absolute;\n  width: 18px;\n  height: 18px;\n  left: 1px;\n  top: 1px;\n  border-radius: 18px;\n  background-color: #fff;\n  content: \" \";\n  cursor: pointer;\n  transition: all 0.36s cubic-bezier(0.78, 0.14, 0.15, 0.86);\n}\n.ant-switch:active:after {\n  width: 24px;\n}\n.ant-switch:focus {\n  box-shadow: 0 0 0 2px rgba(16, 142, 233, 0.2);\n  outline: 0;\n}\n.ant-switch:focus:hover {\n  box-shadow: none;\n}\n.ant-switch-small {\n  height: 14px;\n  min-width: 28px;\n  line-height: 12px;\n}\n.ant-switch-small .ant-switch-inner {\n  margin-left: 18px;\n  margin-right: 3px;\n}\n.ant-switch-small:after {\n  width: 12px;\n  height: 12px;\n  top: 0;\n  left: 0.5px;\n}\n.ant-switch-small:active:after {\n  width: 16px;\n}\n.ant-switch-small.ant-switch-checked:after {\n  left: 100%;\n  margin-left: -12.5px;\n}\n.ant-switch-small.ant-switch-checked .ant-switch-inner {\n  margin-left: 3px;\n  margin-right: 18px;\n}\n.ant-switch-small:active.ant-switch-checked:after {\n  margin-left: -16.5px;\n}\n.ant-switch-checked {\n  background-color: #108ee9;\n}\n.ant-switch-checked .ant-switch-inner {\n  margin-left: 6px;\n  margin-right: 24px;\n}\n.ant-switch-checked:after {\n  left: 100%;\n  margin-left: -19px;\n}\n.ant-switch-checked:active:after {\n  margin-left: -25px;\n}\n.ant-switch-disabled {\n  cursor: not-allowed;\n  background: #f4f4f4;\n}\n.ant-switch-disabled:after {\n  background: #ccc;\n  cursor: not-allowed;\n}\n.ant-switch-disabled .ant-switch-inner {\n  color: rgba(0, 0, 0, 0.25);\n}\n"
                ]
            },] },
];
/** @nocollapse */
NzSwitchComponent.ctorParameters = function () { return []; };
NzSwitchComponent.propDecorators = {
    'nzSize': [{ type: Input },],
    'nzDisabled': [{ type: Input },],
    'onClick': [{ type: HostListener, args: ['click', ['$event'],] },],
};
