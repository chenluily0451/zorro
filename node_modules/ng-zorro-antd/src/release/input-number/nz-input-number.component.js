import { Component, ViewEncapsulation, Input, ElementRef, Renderer2, HostListener, ViewChild, HostBinding, forwardRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
var NzInputNumberComponent = (function () {
    function NzInputNumberComponent(_elementRef, _renderer) {
        var _this = this;
        this._elementRef = _elementRef;
        this._renderer = _renderer;
        this._size = 'default';
        this._prefixCls = 'ant-input-number';
        this._disabledUp = false;
        this._disabledDown = false;
        this._step = 1;
        this._precisionStep = 0;
        this._precisionFactor = 1;
        // ngModel Access
        this.onChange = Function.prototype;
        this.onTouched = Function.prototype;
        this.nzPlaceHolder = '';
        this.nzMin = -Infinity;
        this.nzMax = Infinity;
        this.nzDisabled = false;
        this._checkDisabled = function () {
            _this._disabledUp = !((_this.nzValue + _this.nzStep) <= _this.nzMax);
            _this._disabledDown = !((_this.nzValue - _this.nzStep) >= _this.nzMin);
        };
        this._el = this._elementRef.nativeElement;
        this._renderer.addClass(this._el, "" + this._prefixCls);
    }
    Object.defineProperty(NzInputNumberComponent.prototype, "nzSize", {
        get: function () {
            return this._size;
        },
        set: function (value) {
            this._renderer.removeClass(this._el, this._prefixCls + "-" + this._size);
            this._size = { large: 'lg', small: 'sm' }[value];
            this._renderer.addClass(this._el, this._prefixCls + "-" + this._size);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(NzInputNumberComponent.prototype, "nzStep", {
        get: function () {
            return this._step;
        },
        set: function (value) {
            this._step = value;
            var stepString = value.toString();
            if (stepString.indexOf('e-') >= 0) {
                this._precisionStep = parseInt(stepString.slice(stepString.indexOf('e-')), 10);
            }
            if (stepString.indexOf('.') >= 0) {
                this._precisionStep = stepString.length - stepString.indexOf('.') - 1;
            }
            this._precisionFactor = Math.pow(10, this._precisionStep);
        },
        enumerable: true,
        configurable: true
    });
    NzInputNumberComponent.prototype.onClick = function (target) {
        if (target && !this._inputWrapper.nativeElement.contains(target)) {
            this._offClick();
        }
    };
    NzInputNumberComponent.prototype._numberUp = function ($event) {
        $event.preventDefault();
        $event.stopPropagation();
        if (this.nzValue === undefined) {
            this.nzValue = this.nzMin || 0;
        }
        this._checkDisabled();
        if (!this._disabledUp) {
            this.nzValue = this.toPrecisionAsStep((this._precisionFactor * this.nzValue + this._precisionFactor * this.nzStep) / this._precisionFactor);
        }
        this._checkDisabled();
        this._userInputChange();
    };
    NzInputNumberComponent.prototype._numberDown = function ($event) {
        $event.preventDefault();
        $event.stopPropagation();
        if (this.nzValue === undefined) {
            this.nzValue = this.nzMin || 0;
        }
        this._checkDisabled();
        if (!this._disabledDown) {
            this.nzValue = this.toPrecisionAsStep((this._precisionFactor * this.nzValue - this._precisionFactor * this.nzStep) / this._precisionFactor);
        }
        this._checkDisabled();
        this._userInputChange();
    };
    Object.defineProperty(NzInputNumberComponent.prototype, "nzValue", {
        get: function () {
            return this._value;
        },
        set: function (value) {
            if (this._value === value) {
                return;
            }
            if (value > this.nzMax) {
                this._value = this.nzMax;
                this.onChange(this.nzMax);
            }
            else if (value < this.nzMin) {
                this._value = this.nzMin;
                this.onChange(this.nzMin);
            }
            else {
                this._value = value;
                this._checkDisabled();
            }
        },
        enumerable: true,
        configurable: true
    });
    ;
    NzInputNumberComponent.prototype._userInputChange = function () {
        this.onChange(this.nzValue);
    };
    NzInputNumberComponent.prototype._offClick = function () {
        if (this._value === undefined) {
            return;
        }
        if (this._inputNumber.nativeElement.value > this.nzMax) {
            this._inputNumber.nativeElement.value = this.nzMax;
            this.onChange(this.nzMax);
        }
        else if (this._inputNumber.nativeElement.value < this.nzMin) {
            this._inputNumber.nativeElement.value = this.nzMin;
            this.onChange(this.nzMin);
        }
    };
    NzInputNumberComponent.prototype.toPrecisionAsStep = function (num) {
        if (isNaN(num) || num === '') {
            return num;
        }
        return Number(Number(num).toFixed(this._precisionStep));
    };
    NzInputNumberComponent.prototype.writeValue = function (value) {
        this.nzValue = value;
    };
    NzInputNumberComponent.prototype.registerOnChange = function (fn) {
        this.onChange = fn;
    };
    NzInputNumberComponent.prototype.registerOnTouched = function (fn) {
        this.onTouched = fn;
    };
    return NzInputNumberComponent;
}());
export { NzInputNumberComponent };
NzInputNumberComponent.decorators = [
    { type: Component, args: [{
                selector: 'nz-input-number',
                encapsulation: ViewEncapsulation.None,
                template: "\n    <div class=\"ant-input-number-handler-wrap\">\n      <a class=\"ant-input-number-handler ant-input-number-handler-up\"\n        [ngClass]=\"{'ant-input-number-handler-up-disabled':_disabledUp}\"\n        (mousedown)=\"_numberUp($event)\">\n        <span\n          class=\"ant-input-number-handler-up-inner\"\n          (click)=\"$event.preventDefault();\"></span>\n      </a>\n      <a\n        class=\"ant-input-number-handler ant-input-number-handler-down\"\n        [ngClass]=\"{'ant-input-number-handler-down-disabled':_disabledDown}\"\n        (mousedown)=\"_numberDown($event)\">\n        <span\n          class=\"ant-input-number-handler-down-inner\"\n          (click)=\"$event.preventDefault();\">\n        </span>\n      </a>\n    </div>\n    <div\n      #inputWrapper\n      class=\"ant-input-number-input-wrap\">\n      <input class=\"ant-input-number-input\"\n        #inputNumber\n        [placeholder]=\"nzPlaceHolder\"\n        [disabled]=\"nzDisabled\"\n        [(ngModel)]=\"nzValue\"\n        (ngModelChange)=\"_userInputChange()\"\n        [attr.min]=\"nzMin\"\n        [attr.max]=\"nzMax\"\n        [attr.step]=\"_step\"\n        autocomplete=\"off\">\n    </div>",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(function () { return NzInputNumberComponent; }),
                        multi: true
                    }
                ],
                styles: [
                    "/* stylelint-disable at-rule-empty-line-before,at-rule-name-space-after,at-rule-no-unknown */\n/* stylelint-disable declaration-bang-space-before */\n/* stylelint-disable declaration-bang-space-before */\n.ant-input-number {\n  position: relative;\n  padding: 4px 7px;\n  width: 100%;\n  cursor: text;\n  line-height: 1.5;\n  color: rgba(0, 0, 0, 0.65);\n  background-color: #fff;\n  background-image: none;\n  transition: all .3s;\n  margin: 0;\n  padding: 0;\n  font-size: 12px;\n  height: 28px;\n  display: inline-block;\n  border: 1px solid #d9d9d9;\n  border-radius: 4px;\n  width: 80px;\n}\n.ant-input-number::-moz-placeholder {\n  color: rgba(0, 0, 0, 0.25);\n  opacity: 1;\n}\n.ant-input-number:-ms-input-placeholder {\n  color: rgba(0, 0, 0, 0.25);\n}\n.ant-input-number::-webkit-input-placeholder {\n  color: rgba(0, 0, 0, 0.25);\n}\n.ant-input-number:hover {\n  border-color: #49a9ee;\n}\n.ant-input-number:focus {\n  border-color: #49a9ee;\n  outline: 0;\n  box-shadow: 0 0 0 2px rgba(16, 142, 233, 0.2);\n}\n.ant-input-number-disabled {\n  background-color: #f7f7f7;\n  opacity: 1;\n  cursor: not-allowed;\n  color: rgba(0, 0, 0, 0.25);\n}\n.ant-input-number-disabled:hover {\n  border-color: #e2e2e2;\n}\ntextarea.ant-input-number {\n  max-width: 100%;\n  height: auto;\n  vertical-align: bottom;\n}\n.ant-input-number-lg {\n  padding: 6px 7px;\n  height: 32px;\n}\n.ant-input-number-sm {\n  padding: 1px 7px;\n  height: 22px;\n}\n.ant-input-number-handler {\n  text-align: center;\n  line-height: 0;\n  height: 50%;\n  overflow: hidden;\n  color: rgba(0, 0, 0, 0.43);\n  position: relative;\n  transition: all 0.1s linear;\n  display: block;\n  width: 100%;\n  font-weight: bold;\n}\n.ant-input-number-handler:active {\n  background: #f4f4f4;\n}\n.ant-input-number-handler:hover .ant-input-number-handler-up-inner,\n.ant-input-number-handler:hover .ant-input-number-handler-down-inner {\n  color: #49a9ee;\n}\n.ant-input-number-handler-up-inner,\n.ant-input-number-handler-down-inner {\n  font-style: normal;\n  vertical-align: baseline;\n  text-align: center;\n  text-transform: none;\n  line-height: 1;\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  line-height: 12px;\n  user-select: none;\n  position: absolute;\n  width: 12px;\n  height: 12px;\n  transition: all 0.1s linear;\n  display: inline-block;\n  font-size: 12px;\n  font-size: 7px 9;\n  transform: scale(0.58333333) rotate(0deg);\n  /* IE6-IE8 */\n  -ms-filter: \"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0, M21=0, M22=1)\";\n  zoom: 1;\n  right: 4px;\n  color: rgba(0, 0, 0, 0.43);\n}\n.ant-input-number-handler-up-inner:before,\n.ant-input-number-handler-down-inner:before {\n  display: block;\n  font-family: \"anticon\" !important;\n}\n:root .ant-input-number-handler-up-inner,\n:root .ant-input-number-handler-down-inner {\n  filter: none;\n}\n:root .ant-input-number-handler-up-inner,\n:root .ant-input-number-handler-down-inner {\n  font-size: 12px;\n}\n.ant-input-number:hover {\n  border-color: #49a9ee;\n}\n.ant-input-number-focused {\n  border-color: #49a9ee;\n  outline: 0;\n  box-shadow: 0 0 0 2px rgba(16, 142, 233, 0.2);\n}\n.ant-input-number-disabled {\n  background-color: #f7f7f7;\n  opacity: 1;\n  cursor: not-allowed;\n  color: rgba(0, 0, 0, 0.25);\n}\n.ant-input-number-disabled:hover {\n  border-color: #e2e2e2;\n}\n.ant-input-number-input {\n  width: 100%;\n  text-align: left;\n  outline: 0;\n  -moz-appearance: textfield;\n  height: 26px;\n  transition: all 0.3s linear;\n  color: rgba(0, 0, 0, 0.65);\n  background-color: #fff;\n  border: 0;\n  border-radius: 4px;\n  padding: 0 7px;\n  display: block;\n}\n.ant-input-number-input::-moz-placeholder {\n  color: rgba(0, 0, 0, 0.25);\n  opacity: 1;\n}\n.ant-input-number-input:-ms-input-placeholder {\n  color: rgba(0, 0, 0, 0.25);\n}\n.ant-input-number-input::-webkit-input-placeholder {\n  color: rgba(0, 0, 0, 0.25);\n}\n.ant-input-number-input[disabled] {\n  background-color: #f7f7f7;\n  opacity: 1;\n  cursor: not-allowed;\n  color: rgba(0, 0, 0, 0.25);\n}\n.ant-input-number-input[disabled]:hover {\n  border-color: #e2e2e2;\n}\n.ant-input-number-lg {\n  padding: 0;\n}\n.ant-input-number-lg input {\n  height: 30px;\n}\n.ant-input-number-sm {\n  padding: 0;\n}\n.ant-input-number-sm input {\n  height: 20px;\n}\n.ant-input-number-handler-wrap {\n  border-left: 1px solid #d9d9d9;\n  width: 22px;\n  height: 100%;\n  background: #fff;\n  position: absolute;\n  top: 0;\n  right: 0;\n  opacity: 0;\n  border-radius: 0 4px 4px 0;\n  transition: opacity 0.24s linear 0.1s;\n  z-index: 2;\n}\n.ant-input-number-handler-wrap:hover .ant-input-number-handler {\n  height: 40%;\n}\n.ant-input-number:hover .ant-input-number-handler-wrap {\n  opacity: 1;\n}\n.ant-input-number-handler-up {\n  cursor: pointer;\n}\n.ant-input-number-handler-up-inner {\n  top: 50%;\n  margin-top: -6px;\n}\n.ant-input-number-handler-up-inner:before {\n  text-align: center;\n  content: \"\\e61e\";\n}\n.ant-input-number-handler-up:hover {\n  height: 60% !important;\n}\n.ant-input-number-handler-down {\n  border-top: 1px solid #d9d9d9;\n  top: -1px;\n  cursor: pointer;\n}\n.ant-input-number-handler-down-inner {\n  top: 50%;\n  margin-top: -6px;\n}\n.ant-input-number-handler-down-inner:before {\n  text-align: center;\n  content: \"\\e61d\";\n}\n.ant-input-number-handler-down:hover {\n  height: 60% !important;\n}\n.ant-input-number-handler-down-disabled .ant-input-number-handler-down-inner,\n.ant-input-number-handler-up-disabled .ant-input-number-handler-down-inner,\n.ant-input-number-disabled .ant-input-number-handler-down-inner,\n.ant-input-number-handler-down-disabled .ant-input-number-handler-up-inner,\n.ant-input-number-handler-up-disabled .ant-input-number-handler-up-inner,\n.ant-input-number-disabled .ant-input-number-handler-up-inner {\n  opacity: 0.72;\n  color: #ccc !important;\n  cursor: not-allowed;\n}\n.ant-input-number-disabled .ant-input-number-input {\n  opacity: 0.72;\n  cursor: not-allowed;\n  background-color: #f7f7f7;\n}\n.ant-input-number-disabled .ant-input-number-handler-wrap {\n  display: none;\n}\n.ant-input-number-disabled .ant-input-number-handler {\n  opacity: 0.72;\n  color: #ccc !important;\n  cursor: not-allowed;\n}\n"
                ]
            },] },
];
/** @nocollapse */
NzInputNumberComponent.ctorParameters = function () { return [
    { type: ElementRef, },
    { type: Renderer2, },
]; };
NzInputNumberComponent.propDecorators = {
    '_inputNumber': [{ type: ViewChild, args: ['inputNumber',] },],
    '_inputWrapper': [{ type: ViewChild, args: ['inputWrapper',] },],
    'nzPlaceHolder': [{ type: Input },],
    'nzMin': [{ type: Input },],
    'nzMax': [{ type: Input },],
    'nzDisabled': [{ type: Input }, { type: HostBinding, args: ['class.ant-input-number-disabled',] },],
    'nzSize': [{ type: Input },],
    'nzStep': [{ type: Input },],
    'onClick': [{ type: HostListener, args: ['document:click', ['$event.target'],] },],
};
