import { Optional, Inject, Component, ViewEncapsulation } from '@angular/core';
import { NZ_MESSAGE_CONFIG, NZ_MESSAGE_DEFAULT_CONFIG } from './nz-message-config';
var NzMessageContainerComponent = (function () {
    function NzMessageContainerComponent(defaultConfig, config) {
        this.messages = [];
        this.config = Object.assign({}, defaultConfig, config);
    }
    NzMessageContainerComponent.prototype.ngOnInit = function () { };
    // Create a new message
    NzMessageContainerComponent.prototype.createMessage = function (message) {
        if (this.messages.length >= this.config.nzMaxStack) {
            this.messages.splice(0, 1);
        }
        message.options = this._mergeMessageOptions(message.options);
        this.messages.push(message);
    };
    // Remove a message by messageId
    NzMessageContainerComponent.prototype.removeMessage = function (messageId) {
        var _this = this;
        this.messages.some(function (message, index) {
            if (message.messageId === messageId) {
                _this.messages.splice(index, 1);
                return true;
            }
        });
    };
    // Remove all messages
    NzMessageContainerComponent.prototype.removeMessageAll = function () {
        this.messages = [];
    };
    // Merge default options and cutom message options
    NzMessageContainerComponent.prototype._mergeMessageOptions = function (options) {
        var defaultOptions = {
            nzDuration: this.config.nzDuration,
            nzAnimate: this.config.nzAnimate,
            nzPauseOnHover: this.config.nzPauseOnHover
        };
        return Object.assign(defaultOptions, options);
    };
    return NzMessageContainerComponent;
}());
export { NzMessageContainerComponent };
NzMessageContainerComponent.decorators = [
    { type: Component, args: [{
                selector: 'nz-message-container',
                encapsulation: ViewEncapsulation.None,
                template: "\n    <div class=\"ant-message\">\n      <nz-message *ngFor=\"let message of messages; let i = index\" [nzMessage]=\"message\" [nzIndex]=\"i\"></nz-message>\n    </div>\n  ",
                styles: [
                    "/* stylelint-disable at-rule-empty-line-before,at-rule-name-space-after,at-rule-no-unknown */\n/* stylelint-disable declaration-bang-space-before */\n/* stylelint-disable declaration-bang-space-before */\n.ant-message {\n  font-size: 12px;\n  position: fixed;\n  z-index: 1010;\n  width: 100%;\n  top: 16px;\n  left: 0;\n  pointer-events: none;\n}\n.ant-message-notice {\n  padding: 8px;\n  text-align: center;\n}\n.ant-message-notice:first-child {\n  margin-top: -8px;\n}\n.ant-message-notice-content {\n  padding: 8px 16px;\n  border-radius: 4px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\n  background: #fff;\n  display: inline-block;\n  pointer-events: all;\n}\n.ant-message-success .anticon {\n  color: #00a854;\n}\n.ant-message-error .anticon {\n  color: #f04134;\n}\n.ant-message-warning .anticon {\n  color: #ffbf00;\n}\n.ant-message-info .anticon,\n.ant-message-loading .anticon {\n  color: #108ee9;\n}\n.ant-message .anticon {\n  margin-right: 8px;\n  font-size: 14px;\n  top: 1px;\n  position: relative;\n}\n.ant-message-notice.move-up-leave.move-up-leave-active {\n  animation-name: MessageMoveOut;\n  overflow: hidden;\n  animation-duration: .3s;\n}\n@keyframes MessageMoveOut {\n  0% {\n    opacity: 1;\n    max-height: 150px;\n    padding: 8px;\n  }\n  100% {\n    opacity: 0;\n    max-height: 0;\n    padding: 0;\n  }\n}\n"
                ]
            },] },
];
/** @nocollapse */
NzMessageContainerComponent.ctorParameters = function () { return [
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NZ_MESSAGE_DEFAULT_CONFIG,] },] },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NZ_MESSAGE_CONFIG,] },] },
]; };
