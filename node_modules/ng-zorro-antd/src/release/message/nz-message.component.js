import { Component, ViewEncapsulation, Input } from '@angular/core';
import { NzMessageContainerComponent } from './nz-message-container.component';
import { trigger, state, style, transition, animate } from '@angular/animations';
var NzMessageComponent = (function () {
    function NzMessageComponent(_messageContainer) {
        this._messageContainer = _messageContainer;
        this._eraseTimer = null;
    }
    NzMessageComponent.prototype.ngOnInit = function () {
        this._options = this.nzMessage.options;
        if (this._options.nzAnimate) {
            this.nzMessage.state = 'enter';
        }
        this._autoErase = this._options.nzDuration > 0;
        if (this._autoErase) {
            this._initErase();
            this._startEraseTimeout();
        }
    };
    NzMessageComponent.prototype.ngOnDestroy = function () {
        if (this._autoErase) {
            this._clearEraseTimeout();
        }
    };
    NzMessageComponent.prototype.onEnter = function () {
        if (this._autoErase && this._options.nzPauseOnHover) {
            this._clearEraseTimeout();
            this._updateTTL();
        }
    };
    NzMessageComponent.prototype.onLeave = function () {
        if (this._autoErase && this._options.nzPauseOnHover) {
            this._startEraseTimeout();
        }
    };
    // Remove self
    NzMessageComponent.prototype._destroy = function () {
        var _this = this;
        if (this._options.nzAnimate) {
            this.nzMessage.state = 'leave';
            setTimeout(function () { return _this._messageContainer.removeMessage(_this.nzMessage.messageId); }, 200);
        }
        else {
            this._messageContainer.removeMessage(this.nzMessage.messageId);
        }
    };
    NzMessageComponent.prototype._initErase = function () {
        this._eraseTTL = this._options.nzDuration;
        this._eraseTimingStart = Date.now();
    };
    NzMessageComponent.prototype._updateTTL = function () {
        if (this._autoErase) {
            this._eraseTTL -= Date.now() - this._eraseTimingStart;
        }
    };
    NzMessageComponent.prototype._startEraseTimeout = function () {
        var _this = this;
        if (this._eraseTTL > 0) {
            this._clearEraseTimeout(); // To prevent calling _startEraseTimeout() more times to create more timer
            this._eraseTimer = window.setTimeout(function () { return _this._destroy(); }, this._eraseTTL);
            this._eraseTimingStart = Date.now();
        }
        else {
            this._destroy();
        }
    };
    NzMessageComponent.prototype._clearEraseTimeout = function () {
        if (this._eraseTimer !== null) {
            window.clearTimeout(this._eraseTimer);
            this._eraseTimer = null;
        }
    };
    return NzMessageComponent;
}());
export { NzMessageComponent };
NzMessageComponent.decorators = [
    { type: Component, args: [{
                selector: 'nz-message',
                encapsulation: ViewEncapsulation.None,
                animations: [
                    trigger('enterLeave', [
                        state('enter', style({ opacity: 1, transform: 'translateY(0)' })),
                        transition('* => enter', [
                            style({ opacity: 0, transform: 'translateY(-50%)' }),
                            animate('100ms linear')
                        ]),
                        state('leave', style({ opacity: 0, transform: 'translateY(-50%)' })),
                        transition('* => leave', [
                            style({ opacity: 1, transform: 'translateY(0)' }),
                            animate('100ms linear')
                        ]),
                    ])
                ],
                template: "\n    <div class=\"ant-message-notice\"\n      [@enterLeave]=\"nzMessage.state\"\n      (mouseenter)=\"onEnter()\"\n      (mouseleave)=\"onLeave()\">\n      <div class=\"ant-message-notice-content\">\n        <div *ngIf=\"!nzMessage.html\" class=\"ant-message-custom-content\" [ngClass]=\"'ant-message-' + nzMessage.type\">\n          <ng-container [ngSwitch]=\"nzMessage.type\">\n            <i *ngSwitchCase=\"'success'\" class=\"anticon anticon-check-circle\"></i>\n            <i *ngSwitchCase=\"'info'\" class=\"anticon anticon-info-circle\"></i>\n            <i *ngSwitchCase=\"'warning'\" class=\"anticon anticon-exclamation-circle\"></i>\n            <i *ngSwitchCase=\"'error'\" class=\"anticon anticon-cross-circle\"></i>\n            <i *ngSwitchCase=\"'loading'\" class=\"anticon anticon-spin anticon-loading\"></i>\n          </ng-container>\n          <span>{{nzMessage.content}}</span>\n        </div>\n        <div *ngIf=\"nzMessage.html\" [innerHTML]=\"nzMessage.html\"></div>\n      </div>\n    </div>\n  ",
                styles: [
                    "/* stylelint-disable at-rule-empty-line-before,at-rule-name-space-after,at-rule-no-unknown */\n/* stylelint-disable declaration-bang-space-before */\n/* stylelint-disable declaration-bang-space-before */\n.ant-message {\n  font-size: 12px;\n  position: fixed;\n  z-index: 1010;\n  width: 100%;\n  top: 16px;\n  left: 0;\n  pointer-events: none;\n}\n.ant-message-notice {\n  padding: 8px;\n  text-align: center;\n}\n.ant-message-notice:first-child {\n  margin-top: -8px;\n}\n.ant-message-notice-content {\n  padding: 8px 16px;\n  border-radius: 4px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\n  background: #fff;\n  display: inline-block;\n  pointer-events: all;\n}\n.ant-message-success .anticon {\n  color: #00a854;\n}\n.ant-message-error .anticon {\n  color: #f04134;\n}\n.ant-message-warning .anticon {\n  color: #ffbf00;\n}\n.ant-message-info .anticon,\n.ant-message-loading .anticon {\n  color: #108ee9;\n}\n.ant-message .anticon {\n  margin-right: 8px;\n  font-size: 14px;\n  top: 1px;\n  position: relative;\n}\n.ant-message-notice.move-up-leave.move-up-leave-active {\n  animation-name: MessageMoveOut;\n  overflow: hidden;\n  animation-duration: .3s;\n}\n@keyframes MessageMoveOut {\n  0% {\n    opacity: 1;\n    max-height: 150px;\n    padding: 8px;\n  }\n  100% {\n    opacity: 0;\n    max-height: 0;\n    padding: 0;\n  }\n}\n"
                ]
            },] },
];
/** @nocollapse */
NzMessageComponent.ctorParameters = function () { return [
    { type: NzMessageContainerComponent, },
]; };
NzMessageComponent.propDecorators = {
    'nzMessage': [{ type: Input },],
    'nzIndex': [{ type: Input },],
};
